@model Tuple<LaheKvass.Models.DrinkModel[], double>

@{
    ViewBag.Title = "Cart";
}

<h2 class="text-center my-4">Ostukorv</h2>

<div class="container">
    <div class="row row-cols-1 row-cols-md-2 g-4">
        @foreach (var item in Model.Item1)
        {
            <div class="col">
                <div class="card h-100 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title text-center">@item.DrinkName</h5>
                        <p class="card-text text-center text-muted">Price: €@item.Price</p>
                        <div class="d-flex justify-content-center">
                            <button class="btn btn-danger delete-btn" data-id="@item.Id">Remove</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="total mt-4 text-center">
        <h4>Total: <span class="text-success">€@Model.Item2</span></h4>
    </div>

    <div class="d-flex justify-content-center mt-3">
        <button id="proceed-payment" class="btn btn-primary btn-lg">Proceed to Payment</button>
    </div>
</div>

<script>
    document.addEventListener('click', function (event) {
        const deleteBtn = event.target.closest('.delete-btn');
        if (deleteBtn) {
            const drinkId = deleteBtn.dataset.id;
            deleteFromCart(drinkId);
        }
    });

    function deleteFromCart(drinkId) {
        fetch(`/Order/DeleteFromCart/${drinkId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id: drinkId })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Drink removed from cart!');
                    location.reload();
                } else {
                    alert('Failed to remove drink from cart.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred.');
            });
    }

    document.getElementById('proceed-payment').addEventListener('click', function () {
        fetch(`MakePayment`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({})
        })
            .then(res => {
                if (!res.ok) throw new Error("Payment initiation failed");
                return res.json();
            })
            .then(data => {
                if (data.success) {
                    window.open(data.paymentLink);
                    const intervalId = setInterval(() => {
                        fetch(data.paymentLink)
                            .then(res => res.json())
                            .then(status => {
                                if (status["state"] === "completed") {
                                    alert("Payment complete!");
                                    clearInterval(intervalId);
                                    fetch(`ClearCart`)
                                        .then(() => location.reload());
                                } else if (status["state"] === "failed") {
                                    alert("Payment failed!");
                                    clearInterval(intervalId);
                                }
                            })
                            .catch(() => { });
                    }, 3000);
                } else {
                    alert(data.message || "Payment initiation failed");
                }
            })
            .catch(err => alert(err.message));
    });
</script>

<style>
    .card {
        border: none;
        border-radius: 10px;
    }

    .card-title {
        font-weight: bold;
        font-size: 1.5rem;
    }

    .card-text {
        font-size: 1.2rem;
    }

    .delete-btn {
        margin-top: 15px;
        font-size: 1rem;
    }

    .total h4 {
        font-size: 1.8rem;
        font-weight: bold;
    }

    #proceed-payment {
        padding: 15px 30px;
        font-size: 1.2rem;
    }
</style>
